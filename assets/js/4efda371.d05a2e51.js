"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[819],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,k=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return n?a.createElement(k,i(i({ref:t},c),{},{components:n})):a.createElement(k,i({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},42431:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>l,contentTitle:()=>s,metadata:()=>p,toc:()=>c,default:()=>m});var a=n(87462),r=n(63366),o=(n(67294),n(3905)),i=["components"],l={id:"line",title:"LINE",original_id:"line"},s=void 0,p={unversionedId:"line",id:"version-0.15.17/line",isDocsHomePage:!1,title:"LINE",description:"This guide will give you some basic concepts of LINE bots. For more information, check official docs.",source:"@site/versioned_docs/version-0.15.17/Platforms-LINE.md",sourceDirName:".",slug:"/line",permalink:"/docs/0.15.17/line",editUrl:"https://github.com/Yoctol/bottender/edit/master/docs/versioned_docs/version-0.15.17/Platforms-LINE.md",tags:[],version:"0.15.17",lastUpdatedBy:"\u5433\u6771\u66c4 Wu, Dung-Ie",lastUpdatedAt:1636542901,formattedLastUpdatedAt:"11/10/2021",frontMatter:{id:"line",title:"LINE",original_id:"line"},sidebar:"version-0.15.17/docs",previous:{title:"Messenger",permalink:"/docs/0.15.17/messenger"},next:{title:"Slack",permalink:"/docs/0.15.17/slack"}},c=[{value:"Requirements",id:"requirements",children:[{value:"LINE@",id:"line",children:[],level:3},{value:"LINE Developers",id:"line-developers",children:[],level:3}],level:2},{value:"Build Your First LINE Bot",id:"build-your-first-line-bot",children:[],level:2},{value:"Event Types",id:"event-types",children:[],level:2},{value:"Message Types",id:"message-types",children:[],level:2},{value:"LINE Specific",id:"line-specific",children:[{value:"Group Chats",id:"group-chats",children:[],level:3},{value:"Beacons",id:"beacons",children:[],level:3},{value:"Signature Verification",id:"signature-verification",children:[],level:3}],level:2},{value:"References",id:"references",children:[],level:2}],u={toc:c};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This guide will give you some basic concepts of LINE bots. For more information, check ",(0,o.kt)("a",{parentName:"p",href:"https://developers.line.me/en/docs/messaging-api/building-bot/"},"official docs"),"."),(0,o.kt)("h2",{id:"requirements"},"Requirements"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"LINE@ account"),(0,o.kt)("li",{parentName:"ul"},"LINE Messaging API channel",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"access token"),(0,o.kt)("li",{parentName:"ul"},"channel secret")))),(0,o.kt)("p",null,"You need a ",(0,o.kt)("a",{parentName:"p",href:"http://at.line.me/"},"LINE@")," account and a ",(0,o.kt)("strong",{parentName:"p"},"channel")," connected to that account to develop a LINE bot. You need the channel's ",(0,o.kt)("strong",{parentName:"p"},"access token")," and ",(0,o.kt)("strong",{parentName:"p"},"channel secret")," when you start."),(0,o.kt)("h3",{id:"line"},"LINE@"),(0,o.kt)("p",null,"You need a ",(0,o.kt)("a",{parentName:"p",href:"http://at.line.me/"},"LINE@")," account for your bot to connect to. You can register a ",(0,o.kt)("strong",{parentName:"p"},"standard account")," or an ",(0,o.kt)("strong",{parentName:"p"},"approved account")," ",(0,o.kt)("a",{parentName:"p",href:"https://entry-at.line.me/"},"here"),"."),(0,o.kt)("p",null,"After that, you can manage your LINE@ accounts at ",(0,o.kt)("a",{parentName:"p",href:"https://admin-official.line.me/"},"LINE@ MANAGER")," and set them up to use ",(0,o.kt)("strong",{parentName:"p"},"Messaging API")," for bots to connect to."),(0,o.kt)("h3",{id:"line-developers"},"LINE Developers"),(0,o.kt)("p",null,"After setting up LINE@ accounts to use Messaging API, further setup such as ",(0,o.kt)("strong",{parentName:"p"},"webhook"),", ",(0,o.kt)("strong",{parentName:"p"},"access token")," can be found at ",(0,o.kt)("a",{parentName:"p",href:"https://developers.line.me"},"LINE developers"),". A ",(0,o.kt)("strong",{parentName:"p"},"LINE Login")," app or a ",(0,o.kt)("strong",{parentName:"p"},"Messaging API")," app is called a ",(0,o.kt)("strong",{parentName:"p"},"channel")," here."),(0,o.kt)("h2",{id:"build-your-first-line-bot"},"Build Your First LINE Bot"),(0,o.kt)("p",null,"Check out your channel's ",(0,o.kt)("strong",{parentName:"p"},"access token")," and ",(0,o.kt)("strong",{parentName:"p"},"channel secret")," at ",(0,o.kt)("a",{parentName:"p",href:"https://developers.line.me"},"LINE developers")," then fill them in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Yoctol/bottender/blob/master/examples/line-hello-world/index.js"},"line-hello-world")," example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const { LineBot } = require('bottender');\n\nconst bot = new LineBot({\n  channelSecret: '__FILL_YOUR_SECRET_HERE__',\n  accessToken: '__FILL_YOUR_TOKEN_HERE__',\n});\n")),(0,o.kt)("p",null,"Then run your server and try it out by talking to your LINE@ account!"),(0,o.kt)("h2",{id:"event-types"},"Event Types"),(0,o.kt)("p",null,"There are many different types of events your bot may receive from LINE. In Bottender, you can access them via ",(0,o.kt)("inlineCode",{parentName:"p"},"context.event"),". For more information, check ",(0,o.kt)("a",{parentName:"p",href:"api-lineevent"},"LineEvent Reference")," and ",(0,o.kt)("a",{parentName:"p",href:"https://developers.line.me/en/docs/messaging-api/reference/#webhook-event-objects"},"official docs"),"."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Message event",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Text"),(0,o.kt)("li",{parentName:"ul"},"Image"),(0,o.kt)("li",{parentName:"ul"},"Video"),(0,o.kt)("li",{parentName:"ul"},"Audio"),(0,o.kt)("li",{parentName:"ul"},"File"),(0,o.kt)("li",{parentName:"ul"},"Location"),(0,o.kt)("li",{parentName:"ul"},"Sticker"))),(0,o.kt)("li",{parentName:"ul"},"Follow event"),(0,o.kt)("li",{parentName:"ul"},"Unfollow event"),(0,o.kt)("li",{parentName:"ul"},"Join event"),(0,o.kt)("li",{parentName:"ul"},"Leave event"),(0,o.kt)("li",{parentName:"ul"},"Postback event"),(0,o.kt)("li",{parentName:"ul"},"Beacon event")),(0,o.kt)("p",null,"For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"bot.onEvent(async (context) => {\n  if (context.event.isFollow) {\n    await context.sendText('Hello, welcome to this bot!');\n  } else if (context.event.isText && context.event.text === 'How are you?') {\n    await context.sendText('I am fine.');\n  } else {\n    await context.sendText('I do not understand.');\n  }\n});\n")),(0,o.kt)("h2",{id:"message-types"},"Message Types"),(0,o.kt)("p",null,"There are many different types of messages you can send from your bot. In Bottender, you can use functions like ",(0,o.kt)("inlineCode",{parentName:"p"},"context.sendText()"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"context.sendButtonTemplate()")," to send messages. For more information, check ",(0,o.kt)("a",{parentName:"p",href:"api-linecontext"},"LineContext Reference")," and ",(0,o.kt)("a",{parentName:"p",href:"https://developers.line.me/en/docs/messaging-api/message-types/"},"official docs"),"."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Text"),(0,o.kt)("li",{parentName:"ul"},"Sticker"),(0,o.kt)("li",{parentName:"ul"},"Image"),(0,o.kt)("li",{parentName:"ul"},"Video"),(0,o.kt)("li",{parentName:"ul"},"Audio"),(0,o.kt)("li",{parentName:"ul"},"Location"),(0,o.kt)("li",{parentName:"ul"},"Imagemap"),(0,o.kt)("li",{parentName:"ul"},"Flex"),(0,o.kt)("li",{parentName:"ul"},"Template",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Buttons"),(0,o.kt)("li",{parentName:"ul"},"Confirm"),(0,o.kt)("li",{parentName:"ul"},"Carousel"),(0,o.kt)("li",{parentName:"ul"},"Image carousel")))),(0,o.kt)("h2",{id:"line-specific"},"LINE Specific"),(0,o.kt)("h3",{id:"group-chats"},"Group Chats"),(0,o.kt)("p",null,"LINE has 2 types of group chats, ",(0,o.kt)("strong",{parentName:"p"},"groups")," and ",(0,o.kt)("strong",{parentName:"p"},"rooms"),". For more information, check ",(0,o.kt)("a",{parentName:"p",href:"https://developers.line.me/en/docs/messaging-api/group-chats/"},"official docs"),"."),(0,o.kt)("p",null,"You can invite your bot account into a group or a room. By doing so, the events will create ",(0,o.kt)("strong",{parentName:"p"},"group/room sessions"),". Send methods like ",(0,o.kt)("inlineCode",{parentName:"p"},"context.sendText()")," will send to the group/room rather than to the private message to the sender in these contexts. You can still get the sender's profile with ",(0,o.kt)("inlineCode",{parentName:"p"},"context.session.user"),"."),(0,o.kt)("p",null,"If your LINE bot is connected to a ",(0,o.kt)("strong",{parentName:"p"},"LINE@ Approved account")," or an ",(0,o.kt)("strong",{parentName:"p"},"official account"),", you can access the group/room member IDs in ",(0,o.kt)("inlineCode",{parentName:"p"},"context.session.group")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"context.session.room"),". If not, these properties will return an empty array ",(0,o.kt)("inlineCode",{parentName:"p"},"[]"),"."),(0,o.kt)("h3",{id:"beacons"},"Beacons"),(0,o.kt)("p",null,"With ",(0,o.kt)("strong",{parentName:"p"},"LINE Beacon"),", your bot can receive beacon webhook events whenever a LINE user enters or leaves the proximity of a beacon. Using beacons, you can customize your bot to interact with users in specific contexts. For more information, check ",(0,o.kt)("a",{parentName:"p",href:"https://developers.line.me/en/docs/messaging-api/using-beacons/"},"official docs"),"."),(0,o.kt)("h3",{id:"signature-verification"},"Signature Verification"),(0,o.kt)("p",null,"To ensure that the request is sent from the LINE Platform, you should provide your ",(0,o.kt)("strong",{parentName:"p"},"channel secret")," so that Bottender can do signature validation for you. For more information, check ",(0,o.kt)("a",{parentName:"p",href:"https://developers.line.me/en/docs/messaging-api/reference/#signature-validation"},"official docs"),"."),(0,o.kt)("h2",{id:"references"},"References"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://developers.line.me/en/docs/messaging-api/overview/"},"official docs"),": official docs of LINE messaging API."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://admin-official.line.me/"},"LINE@ MANAGER")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://developers.line.me"},"LINE developers")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Yoctol/messaging-apis/tree/master/packages/messaging-api-line"},"messaging-api-line")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Yoctol/bottender/blob/master/examples/line-hello-world/index.js"},"line-hello-world")," example.")))}m.isMDXComponent=!0}}]);