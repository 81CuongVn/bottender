"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[53837],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(t),m=o,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||r;return t?a.createElement(g,s(s({ref:n},p),{},{components:t})):a.createElement(g,s({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,s=new Array(r);s[0]=d;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var c=2;c<r;c++)s[c]=t[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},43779:(e,n,t)=>{t.r(n),t.d(n,{frontMatter:()=>i,contentTitle:()=>l,metadata:()=>c,toc:()=>p,default:()=>d});var a=t(87462),o=t(63366),r=(t(67294),t(3905)),s=["components"],i={id:"channel-messenger-multi-page",title:"Messenger Multi-Page Support",original_id:"channel-messenger-multi-page"},l=void 0,c={unversionedId:"channel-messenger-multi-page",id:"version-1.4/channel-messenger-multi-page",isDocsHomePage:!1,title:"Messenger Multi-Page Support",description:"This doc outlines how to build a single Bottender app to serve multiple Facebook Pages. For example, you can create a single Bottender app of dental appointments for multiple clinics with individual clinic info.",source:"@site/versioned_docs/version-1.4/channel-messenger-multi-page.md",sourceDirName:".",slug:"/channel-messenger-multi-page",permalink:"/docs/1.4/channel-messenger-multi-page",editUrl:"https://github.com/Yoctol/bottender/edit/master/docs/versioned_docs/version-1.4/channel-messenger-multi-page.md",tags:[],version:"1.4",lastUpdatedBy:"\u5433\u6771\u66c4 Wu, Dung-Ie",lastUpdatedAt:1636542901,formattedLastUpdatedAt:"11/10/2021",frontMatter:{id:"channel-messenger-multi-page",title:"Messenger Multi-Page Support",original_id:"channel-messenger-multi-page"},sidebar:"version-1.4/docs",previous:{title:"Using Messenger Persona",permalink:"/docs/1.4/channel-messenger-persona"},next:{title:"WhatsApp Setup",permalink:"/docs/1.4/channel-whatsapp-setup"}},p=[{value:"Enable <code>mapPageToAccessToken</code> feature of Bottender",id:"enable-mappagetoaccesstoken-feature-of-bottender",children:[],level:2},{value:"Prepare <code>Facebook Page Access Token</code> for Each Facebook Page",id:"prepare-facebook-page-access-token-for-each-facebook-page",children:[{value:"Fetching Token Statically",id:"fetching-token-statically",children:[],level:3},{value:"Fetching Token Dynamically",id:"fetching-token-dynamically",children:[],level:3}],level:2},{value:"Manage <code>Facebook Page Subscriptions Fields</code> Your Bot Needs",id:"manage-facebook-page-subscriptions-fields-your-bot-needs",children:[{value:"Subscribe <code>Facebook Page Subscriptions Fields</code>",id:"subscribe-facebook-page-subscriptions-fields",children:[],level:3},{value:"Unsubscribe <code>Facebook Page Subscriptions Fields</code>",id:"unsubscribe-facebook-page-subscriptions-fields",children:[],level:3}],level:2}],u={toc:p};function d(e){var n=e.components,t=(0,o.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/662387/71957687-66533b00-3229-11ea-9914-7e5919dd9d61.png",alt:null})),(0,r.kt)("p",null,"This doc outlines how to build a single Bottender app to serve multiple Facebook Pages. For example, you can create a single Bottender app of dental appointments for multiple clinics with individual clinic info."),(0,r.kt)("p",null,"In our case, we use Bottender to build our online chatbot builder, ",(0,r.kt)("a",{parentName:"p",href:"https://yoctol.ai/creator/"},"Creator"),". Every user can use ",(0,r.kt)("a",{parentName:"p",href:"https://yoctol.ai/creator/"},"Creator")," to build his/her bots. Technically speaking, each user's outcome of Creator is ",(0,r.kt)("inlineCode",{parentName:"p"},"bot configs")," followed by a predefined structure. Finally, we use a single Bottender app with different ",(0,r.kt)("inlineCode",{parentName:"p"},"bot configs")," to provider various Messenger Bots for each Facebook Page."),(0,r.kt)("p",null,"The core concept that makes one Bottender app serves multiple Facebook Pages is ",(0,r.kt)("inlineCode",{parentName:"p"},"context"),". It covers not only the user's message, Page Id, but also the Page token for bot response. For more information, you may check out Bottender's doc, ",(0,r.kt)("a",{parentName:"p",href:"/docs/1.4/channel-messenger-handling-events"},"Handling Messenger Events"),"."),(0,r.kt)("p",null,"In the following sections, you can see three essential steps:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Enable ",(0,r.kt)("inlineCode",{parentName:"li"},"mapPageToAccessToken")," feature of Bottender"),(0,r.kt)("li",{parentName:"ul"},"Prepare ",(0,r.kt)("inlineCode",{parentName:"li"},"Facebook Page Access Token")," for each Facebook Page"),(0,r.kt)("li",{parentName:"ul"},"Manage ",(0,r.kt)("inlineCode",{parentName:"li"},"Facebook Page Subscriptions Fields")," your bot needs")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Note:")," If you can't wait to begin with an example code, please visit ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Yoctol/bottender/tree/master/examples/messenger-multi-pages"},"Messenger Multi-pages Example"),".")),(0,r.kt)("h2",{id:"enable-mappagetoaccesstoken-feature-of-bottender"},"Enable ",(0,r.kt)("inlineCode",{parentName:"h2"},"mapPageToAccessToken")," feature of Bottender"),(0,r.kt)("p",null,"You have to tell Bottender you are developing a Bottender app to serve for multiple Facebook Pages by fill ",(0,r.kt)("inlineCode",{parentName:"p"},"channels.messenger.mapPageToAccessToken")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"bottender.config.js"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// bottender.config.js\nmodule.exports = {\n  channels: {\n    messenger: {\n      enabled: true,\n      path: '/webhooks/messenger',\n      pageId: process.env.MESSENGER_PAGE_ID,\n      accessToken: process.env.MESSENGER_ACCESS_TOKEN,\n      appId: process.env.MESSENGER_APP_ID,\n      appSecret: process.env.MESSENGER_APP_SECRET,\n      verifyToken: process.env.MESSENGER_VERIFY_TOKEN,\n      mapPageToAccessToken: (pageId) => {\n        // resolve corresponding access token\n      },\n    },\n  },\n};\n")),(0,r.kt)("h2",{id:"prepare-facebook-page-access-token-for-each-facebook-page"},"Prepare ",(0,r.kt)("inlineCode",{parentName:"h2"},"Facebook Page Access Token")," for Each Facebook Page"),(0,r.kt)("p",null,"To make your bot to reply to users, you need ",(0,r.kt)("inlineCode",{parentName:"p"},"Facebook Page Access Token")," for each Facebook Page. So, you have to implement your ",(0,r.kt)("inlineCode",{parentName:"p"},"mapPageToAccessToken")," function to tell Bottender how to get the corresponding access token of each Facebook Page."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Note:")," All operations require a ",(0,r.kt)("inlineCode",{parentName:"p"},"Facebook Page Access Token")," with ",(0,r.kt)("a",{parentName:"p",href:"https://developers.facebook.com/docs/facebook-login/permissions/#reference-manage_pages"},(0,r.kt)("inlineCode",{parentName:"a"},"manage_pages"))," permission.")),(0,r.kt)("h3",{id:"fetching-token-statically"},"Fetching Token Statically"),(0,r.kt)("p",null,"If you only need your bot to apply to a fixed set of Facebook Pages, you may check the sample code below."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function mapPageToAccessToken(pageId) {\n  switch (pageId) {\n    case PAGE_1_PAGE_ID:\n      return PAGE_1_ACCESS_TOKEN;\n    case PAGE_2_PAGE_ID:\n      return PAGE_2_ACCESS_TOKEN;\n  }\n}\n")),(0,r.kt)("p",null,"For more information, you can check the Bottender example, ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Yoctol/bottender/tree/master/examples/messenger-multi-pages"},"Messenger Multi-pages Example"),"."),(0,r.kt)("h3",{id:"fetching-token-dynamically"},"Fetching Token Dynamically"),(0,r.kt)("p",null,"We assume that an advanced developer like you might need to support more Facebook Pages dynamically. Plus, you don't want to modify the ",(0,r.kt)("inlineCode",{parentName:"p"},"mapPageToAccessToken")," function every time you add your bot to a new Page."),(0,r.kt)("p",null,"In this case, you may dynamically load tokens from SQL Database, MongoDB, Redis, REST API, or whatever you want:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"async function mapPageToAccessToken(pageId) {\n  return fetchTokenFromSomewhere(pageId);\n}\n")),(0,r.kt)("h2",{id:"manage-facebook-page-subscriptions-fields-your-bot-needs"},"Manage ",(0,r.kt)("inlineCode",{parentName:"h2"},"Facebook Page Subscriptions Fields")," Your Bot Needs"),(0,r.kt)("p",null,"Facebook has dedicated permission controls; please remember to subscribe ",(0,r.kt)("inlineCode",{parentName:"p"},"Facebook Page Subscriptions Fields")," you need."),(0,r.kt)("p",null,"We recommend you at least enable the following fields:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"messages")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"messaging_postbacks")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"messaging_optins")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"messaging_referrals")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"messaging_policy_enforcement"))),(0,r.kt)("h3",{id:"subscribe-facebook-page-subscriptions-fields"},"Subscribe ",(0,r.kt)("inlineCode",{parentName:"h3"},"Facebook Page Subscriptions Fields")),(0,r.kt)("p",null,"We assume that you might need to add your bot to a Facebook Pages dynamically. In the following code, you can see how to subscribe ",(0,r.kt)("inlineCode",{parentName:"p"},"Facebook Page Subscriptions Fields")," your bot needs."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const { getClient } = require('bottender');\n\nconst messenger = getClient('messenger');\n\n// subscribe app for page\nawait messenger.axios.post(\n  `/${pageId}/subscribed_apps?access_token=${accessToken}`,\n  {\n    subscribedFields: [\n      'messages',\n      'messaging_postbacks',\n      'messaging_optins',\n      'messaging_referrals',\n      'messaging_policy_enforcement',\n    ].join(','),\n  }\n);\n")),(0,r.kt)("h3",{id:"unsubscribe-facebook-page-subscriptions-fields"},"Unsubscribe ",(0,r.kt)("inlineCode",{parentName:"h3"},"Facebook Page Subscriptions Fields")),(0,r.kt)("p",null,"We assume that you might need to remove your bot from Facebook Pages dynamically. In the following code, you can see how to unsubscribe ",(0,r.kt)("inlineCode",{parentName:"p"},"Facebook Page Subscriptions Fields")," your bot have subscribed."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// unsubscribe app for page\nawait messenger.axios.delete(\n  `/${pageId}/subscribed_apps?access_token=${accessToken}`\n);\n")))}d.isMDXComponent=!0}}]);