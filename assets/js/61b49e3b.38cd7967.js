"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[59878],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),s=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,h=d["".concat(c,".").concat(m)]||d[m]||p[m]||a;return n?o.createElement(h,l(l({ref:t},u),{},{components:n})):o.createElement(h,l({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<a;s++)l[s]=n[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},55426:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>i,contentTitle:()=>c,metadata:()=>s,assets:()=>u,toc:()=>p,default:()=>m});var o=n(87462),r=n(63366),a=(n(67294),n(3905)),l=["components"],i={title:"Bottender 1.1: Multi-Channel Routing, Better Slack APIs Support in Chat, View, Block Kit",author:"C. T. Lin",authorURL:"https://twitter.com/chentsulin",authorTitle:"Co-Creator of Bottender",authorTwitter:"chentsulin",authorImageURL:"https://avatars1.githubusercontent.com/u/3382565?s=460&v=4"},c=void 0,s={permalink:"/blog/2019/12/27/bottender-1_1",source:"@site/blog/2019-12-27-bottender-1_1.md",title:"Bottender 1.1: Multi-Channel Routing, Better Slack APIs Support in Chat, View, Block Kit",description:"In Bottender v1.1, we made two remarkable improvements in:",date:"2019-12-27T00:00:00.000Z",formattedDate:"December 27, 2019",tags:[],readingTime:1.945,truncated:!0,authors:[{name:"C. T. Lin",title:"Co-Creator of Bottender",url:"https://twitter.com/chentsulin",imageURL:"https://avatars1.githubusercontent.com/u/3382565?s=460&v=4"}],prevItem:{title:"Bottender 1.2: Serverless, NLU Integration, and More",permalink:"/blog/2020/01/22/bottender-1_2"},nextItem:{title:"Bottender 1.0: Create Bottender App, Router, Action Runner and Bottender.js.org",permalink:"/blog/2019/12/05/bottender-1"}},u={authorsImageUrls:[void 0]},p=[{value:"Multi-Channel Routing",id:"multi-channel-routing",children:[{value:"More Events for Routing",id:"more-events-for-routing",children:[],level:3}],level:2},{value:"Better Slack APIs Support in Chat, View, Block Kits",id:"better-slack-apis-support-in-chat-view-block-kits",children:[],level:2}],d={toc:p};function m(e){var t=e.components,n=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"In Bottender v1.1, we made two remarkable improvements in:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/blog/2019/12/27/bottender-1_1#multi-channel-routing"},"Multi-Channel Routing"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"/blog/2019/12/27/bottender-1_1#better-slack-apis-support-in-chat-view-block-kits"},"Better Slack APIs Support in Chat, View, Block Kit")))),(0,a.kt)("h2",{id:"multi-channel-routing"},"Multi-Channel Routing"),(0,a.kt)("p",null,"In Bottender v1.0, we first introduced the idea of ",(0,a.kt)("a",{parentName:"p",href:"/docs/the-basics-routing"},(0,a.kt)("inlineCode",{parentName:"a"},"Routing"))," to help bot developers organize the path of bot actions."),(0,a.kt)("p",null,"When we come to Bottender v1.1, we are glad to announce ",(0,a.kt)("inlineCode",{parentName:"p"},"Multi-Channel Routing"),", which enable bot developers to have a dedicated path control cross multiple chat channels."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const {\n  router,\n  messenger,\n  line,\n  slack,\n  telegram,\n  viber,\n} = require('bottender/router');\n\nasync function MessengerAction(context) {\n  /* ... */\n}\nasync function LineAction(context) {\n  /* ... */\n}\nasync function SlackAction(context) {\n  /* ... */\n}\nasync function TelegramAction(context) {\n  /* ... */\n}\nasync function ViberAction(context) {\n  /* ... */\n}\n\nfunction App() {\n  return router([\n    messenger(MessengerAction),\n    line(LineAction),\n    slack(SlackAction),\n    telegram(TelegramAction),\n    viber(ViberAction),\n  ]);\n}\n")),(0,a.kt)("h3",{id:"more-events-for-routing"},"More Events for Routing"),(0,a.kt)("p",null,"Besides, Bottender v1.1 adds chat channel specific events for ",(0,a.kt)("inlineCode",{parentName:"p"},"Routing"),", which allows you to write better modular code in your product codebase."),(0,a.kt)("p",null,"For example, you can use the same action to update your customer database while a bot user follows/unfollows your bot either on Messenger, LINE or Viber."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { router, payload, line, telegram } = require('bottender/router');\n\nasync function Follow(context) {\n  console.log(`insert ${context.session.user.id} into database`);\n  await context.sendText('Welcome to my bot!');\n}\n\nasync function Unfollow(context) {\n  console.log(`delete ${context.session.user.id} from database`);\n}\n\nfunction App() {\n  return router([\n    payload('GET_STARTED', Follow),\n    line.follow(Follow),\n    line.unfollow(Unfollow),\n    line.join(Follow),\n    line.leave(Unfollow),\n    viber.subscribed(Follow),\n    viber.unsubscribed(Unfollow),\n  ]);\n}\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note:")," Please refer to ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Yoctol/bottender/releases/tag/v1.1.0"},"v1.1.0 Change Log")," to see the whole list of support events for ",(0,a.kt)("inlineCode",{parentName:"p"},"Routing"),".")),(0,a.kt)("h2",{id:"better-slack-apis-support-in-chat-view-block-kits"},"Better Slack APIs Support in Chat, View, Block Kits"),(0,a.kt)("p",null,"Since we have observed the increasing needs of Slack Bots, Bottender 1.1 now supports Slack ",(0,a.kt)("inlineCode",{parentName:"p"},"Chat")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"View")," APIs. Slack bot developers, can use ",(0,a.kt)("a",{parentName:"p",href:"https://api.slack.com/methods"},"Slack Native APIs")," on Bottender without adaptions. Check out our new doc, ",(0,a.kt)("a",{parentName:"p",href:"/docs/channel-slack-sending-messages"},"Sending Slack Messages")," for more info."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"context.chat.postMessage(/* ... */);\ncontext.chat.postEphemeral(/* ... */);\ncontext.chat.update(/* ... */);\ncontext.chat.delete(/* ... */);\ncontext.chat.meMessage(/* ... */);\ncontext.chat.getPermalink(/* ... */);\ncontext.chat.scheduleMessage(/* ... */);\ncontext.chat.deleteScheduledMessage(/* ... */);\ncontext.chat.scheduledMessages.list(/* ... */);\n")),(0,a.kt)("p",null,"Plus, we also improved ",(0,a.kt)("a",{parentName:"p",href:"https://api.slack.com/block-kit"},(0,a.kt)("inlineCode",{parentName:"a"},"Block Kit")," and ",(0,a.kt)("inlineCode",{parentName:"a"},"Modal"))," support. Thanks to static type-checking, you can have a pleasant experience when building block kits UIs. For more info, please see our new doc, ",(0,a.kt)("a",{parentName:"p",href:"/docs/channel-slack-block-kit"},"Slack Block Kit"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"context.views.open(/* ... */);\ncontext.views.publish(/* ... */);\ncontext.views.push(/* ... */);\ncontext.views.update(/* ... */);\n")))}m.isMDXComponent=!0}}]);