"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[35595],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=o,g=m["".concat(i,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(g,s(s({ref:t},c),{},{components:n})):r.createElement(g,s({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,s[1]=l;for(var p=2;p<a;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7916:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>l,contentTitle:()=>i,metadata:()=>p,toc:()=>c,default:()=>m});var r=n(87462),o=n(63366),a=(n(67294),n(3905)),s=["components"],l={id:"messenger",title:"Messenger",original_id:"messenger"},i=void 0,p={unversionedId:"messenger",id:"version-0.15.17/messenger",isDocsHomePage:!1,title:"Messenger",description:"This guide will give you some basic concepts of developing a Messenger bot. For more detail, see official docs.",source:"@site/versioned_docs/version-0.15.17/Platforms-Messenger.md",sourceDirName:".",slug:"/messenger",permalink:"/docs/0.15.17/messenger",editUrl:"https://github.com/Yoctol/bottender/edit/master/docs/versioned_docs/version-0.15.17/Platforms-Messenger.md",tags:[],version:"0.15.17",lastUpdatedBy:"\u5433\u6771\u66c4 Wu, Dung-Ie",lastUpdatedAt:1636542901,formattedLastUpdatedAt:"11/10/2021",frontMatter:{id:"messenger",title:"Messenger",original_id:"messenger"},sidebar:"version-0.15.17/docs",previous:{title:"Console",permalink:"/docs/0.15.17/console"},next:{title:"LINE",permalink:"/docs/0.15.17/line"}},c=[{value:"Requirements",id:"requirements",children:[],level:2},{value:"Build Your First Messenger Bot",id:"build-your-first-messenger-bot",children:[{value:"Full Example",id:"full-example",children:[],level:3},{value:"Options",id:"options",children:[],level:3}],level:2},{value:"Events",id:"events",children:[{value:"Messenger Event Properties",id:"messenger-event-properties",children:[],level:3}],level:2},{value:"Send APIs",id:"send-apis",children:[{value:"<code>messaging_type</code>",id:"messaging_type",children:[],level:3},{value:"Messenger-Specific Context Send API",id:"messenger-specific-context-send-api",children:[],level:3}],level:2},{value:"References",id:"references",children:[],level:2}],u={toc:c};function m(e){var t=e.components,n=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This guide will give you some basic concepts of developing a Messenger bot. For more detail, see ",(0,a.kt)("a",{parentName:"p",href:"https://developers.facebook.com/docs/messenger-platform"},"official docs"),"."),(0,a.kt)("h2",{id:"requirements"},"Requirements"),(0,a.kt)("p",null,"To develop a Messenger bot, you need the following requirements:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"A Page Access Token"),(0,a.kt)("li",{parentName:"ul"},"An App Secret")),(0,a.kt)("p",null,"In order to get Page Access Token and App secret, you need:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.facebook.com/pages/create/"},"A Facebook Page")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://developers.facebook.com/"},"A Facebook App"))),(0,a.kt)("p",null,"After you get a Facebook Page and a Facebook App, you can get the ",(0,a.kt)("inlineCode",{parentName:"p"},"Page Access Token"),". Check the ",(0,a.kt)("a",{parentName:"p",href:"https://developers.facebook.com/docs/messenger-platform/getting-started/app-setup"},"official docs"),".\nAlso, remember to copy the ",(0,a.kt)("inlineCode",{parentName:"p"},"App Secret")," on app dashboard. Click ",(0,a.kt)("inlineCode",{parentName:"p"},"Show")," button on the dashboard and type your password to get the App Secret."),(0,a.kt)("p",null,"Before leaving this section, make sure you have the following requirements:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"A Page Access Token"),(0,a.kt)("li",{parentName:"ul"},"An App Secret")),(0,a.kt)("p",null,"We will use them to develop our messenger bot later."),(0,a.kt)("h2",{id:"build-your-first-messenger-bot"},"Build Your First Messenger Bot"),(0,a.kt)("p",null,"The following is a partial sample code, see the full example ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Yoctol/bottender/tree/v0.15.x/examples/messenger-hello-world"},"here"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { MessengerBot } = require('bottender');\n\nconst bot = new MessengerBot({\n  accessToken: '__FILL_YOUR_TOKEN_HERE__',\n  appSecret: '__FILL_YOUR_SECRET_HERE__',\n});\n")),(0,a.kt)("p",null,"After you fill the ",(0,a.kt)("inlineCode",{parentName:"p"},"accessToken")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"appSecret"),", run your server and try it out by talking to your Facebook Page! It works!"),(0,a.kt)("h3",{id:"full-example"},"Full Example"),(0,a.kt)("p",null,"Here is the complete example for ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Yoctol/bottender/tree/v0.15.x/examples/messenger-hello-world"},"messenger-hello-world"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { MessengerBot } = require('bottender');\nconst { createServer } = require('bottender/express');\n\nconst bot = new MessengerBot({\n  accessToken: '__FILL_YOUR_TOKEN_HERE__',\n  appSecret: '__FILL_YOUR_SECRET_HERE__',\n});\n\nbot.onEvent(async (context) => {\n  await context.sendText('Hello World');\n});\n\nconst server = createServer(bot);\n\nserver.listen(5000, () => {\n  console.log('server is running on 5000 port...');\n});\n")),(0,a.kt)("h3",{id:"options"},"Options"),(0,a.kt)("p",null,"If you want to use your own verify token, you can pass options object into ",(0,a.kt)("inlineCode",{parentName:"p"},"createServer()")," with ",(0,a.kt)("inlineCode",{parentName:"p"},"verifyToken")," key."),(0,a.kt)("p",null,"For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const server = createServer(bot, {\n  verifyToken: '__FILL_YOUR_VERIFY_TOKEN_HERE__',\n});\n")),(0,a.kt)("p",null,"more on ",(0,a.kt)("a",{parentName:"p",href:"server#options"},"Guides Server"),"."),(0,a.kt)("h2",{id:"events"},"Events"),(0,a.kt)("p",null,"Bottender supports several types of events. You are able to access them via ",(0,a.kt)("inlineCode",{parentName:"p"},"context.event"),".\nFor more information, check ",(0,a.kt)("a",{parentName:"p",href:"api-event"},"Event Reference"),"."),(0,a.kt)("h3",{id:"messenger-event-properties"},"Messenger Event Properties"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"isText"),(0,a.kt)("li",{parentName:"ul"},"isImage"),(0,a.kt)("li",{parentName:"ul"},"isQuickReply"),(0,a.kt)("li",{parentName:"ul"},"isPostback"),(0,a.kt)("li",{parentName:"ul"},"isEcho"),(0,a.kt)("li",{parentName:"ul"},"quickReply"),(0,a.kt)("li",{parentName:"ul"},"postback"),(0,a.kt)("li",{parentName:"ul"},"payload"),(0,a.kt)("li",{parentName:"ul"},"...")),(0,a.kt)("p",null,"more on ",(0,a.kt)("a",{parentName:"p",href:"api-messengerevent"},"MessengerEvent Reference"),"."),(0,a.kt)("p",null,"For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"bot.onEvent(async (context) => {\n  if (context.event.isQuickReply) {\n    await context.sendText('I know this is a quick reply.');\n  } else if (context.event.payload === 'A_DEVELOPER_DEFINED_PAYLOAD') {\n    await context.sendText('Got you!');\n  } else {\n    await context.sendText('I do not understand.');\n  }\n});\n")),(0,a.kt)("h2",{id:"send-apis"},"Send APIs"),(0,a.kt)("p",null,"After receiving the request from Messenger, you can send API by using context send API."),(0,a.kt)("h3",{id:"messaging_type"},(0,a.kt)("inlineCode",{parentName:"h3"},"messaging_type")),(0,a.kt)("p",null,"Messenger introduced a ",(0,a.kt)("inlineCode",{parentName:"p"},"messaging_type")," field in Messenger Platform 2.2 and it will be required starting from May 7, 2018."),(0,a.kt)("p",null,"When using Bottender, we automatically set ",(0,a.kt)("inlineCode",{parentName:"p"},"messaging_type")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"RESPONSE")," when using send APIs in context so you don't need to worry about it. You can still pass other ",(0,a.kt)("inlineCode",{parentName:"p"},"messaging_types")," in the ",(0,a.kt)("inlineCode",{parentName:"p"},"options")," argument."),(0,a.kt)("h3",{id:"messenger-specific-context-send-api"},"Messenger-Specific Context Send API"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"sendText"),(0,a.kt)("li",{parentName:"ul"},"sendImage"),(0,a.kt)("li",{parentName:"ul"},"sendGenericTemplate"),(0,a.kt)("li",{parentName:"ul"},"...")),(0,a.kt)("p",null,"more on ",(0,a.kt)("a",{parentName:"p",href:"api-messengercontext"},"MessengerContext Reference"),"."),(0,a.kt)("p",null,"For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"bot.onEvent(async (context) => {\n  await context.sendText('Hello World!');\n  await context.sendImage('http://example.com/pic.png');\n  await context.sendGenericTemplate([\n    {\n      title: \"Welcome to Peter's Hats\",\n      image_url: 'https://petersfancybrownhats.com/company_image.png',\n      subtitle: \"We've got the right hat for everyone.\",\n      default_action: {\n        type: 'web_url',\n        url: 'https://peterssendreceiveapp.ngrok.io/view?item=103',\n        messenger_extensions: true,\n        webview_height_ratio: 'tall',\n        fallback_url: 'https://peterssendreceiveapp.ngrok.io/',\n      },\n      buttons: [\n        {\n          type: 'postback',\n          title: 'Start Chatting',\n          payload: 'DEVELOPER_DEFINED_PAYLOAD',\n        },\n      ],\n    },\n  ]);\n});\n")),(0,a.kt)("h2",{id:"references"},"References"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/Yoctol/messaging-apis/tree/master/packages/messaging-api-messenger"},"Messaging-api-messenger"),": Our open source Messenger API client project."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://developers.facebook.com/docs/messenger-platform"},"Messenger Platform"),": The Messenger Platform docs.")))}m.isMDXComponent=!0}}]);