"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[58986],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=p(n),k=l,u=m["".concat(s,".").concat(k)]||m[k]||c[k]||r;return n?a.createElement(u,o(o({ref:t},d),{},{components:n})):a.createElement(u,o({ref:t},d))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},69531:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>i,contentTitle:()=>s,metadata:()=>p,toc:()=>d,default:()=>m});var a=n(87462),l=n(63366),r=(n(67294),n(3905)),o=["components"],i={id:"api-slack-client",title:"SlackClient",original_id:"api-slack-client"},s=void 0,p={unversionedId:"api-slack-client",id:"version-1.5/api-slack-client",isDocsHomePage:!1,title:"SlackClient",description:"- Usage",source:"@site/versioned_docs/version-1.5/api-slack-client.md",sourceDirName:".",slug:"/api-slack-client",permalink:"/docs/api-slack-client",editUrl:"https://github.com/Yoctol/bottender/edit/master/docs/versioned_docs/version-1.5/api-slack-client.md",tags:[],version:"1.5",lastUpdatedBy:"\u5433\u6771\u66c4 Wu, Dung-Ie",lastUpdatedAt:1636542901,formattedLastUpdatedAt:"11/10/2021",frontMatter:{id:"api-slack-client",title:"SlackClient",original_id:"api-slack-client"},sidebar:"version-1.5/api",previous:{title:"SlackEvent",permalink:"/docs/api-slack-event"},next:{title:"TelegramContext",permalink:"/docs/api-telegram-context"}},d=[{value:"Usage",id:"usage",children:[{value:"Error Handling",id:"error-handling",children:[],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"Call Available Methods",id:"call-available-methods",children:[{value:"<code>callMethod(method, body)</code> - Official docs",id:"callmethodmethod-body---official-docs",children:[],level:4}],level:3},{value:"Chat API",id:"chat-api",children:[{value:"<code>postMessage(channel, message [, options])</code> - Official docs",id:"postmessagechannel-message--options---official-docs",children:[],level:4},{value:"<code>postEphemeral(channel, user, message [, options])</code> - Official docs",id:"postephemeralchannel-user-message--options---official-docs",children:[],level:4}],level:3},{value:"Users API",id:"users-api",children:[{value:"<code>getUserList(options?)</code> - Official docs",id:"getuserlistoptions---official-docs",children:[],level:4},{value:"<code>getAllUserList(options?)</code> - Official docs",id:"getalluserlistoptions---official-docs",children:[],level:4},{value:"<code>getUserInfo(userId, options?)</code> - Official docs",id:"getuserinfouserid-options---official-docs",children:[],level:4}],level:3},{value:"Channels API",id:"channels-api",children:[{value:"<code>getChannelList(options?)</code> - Official docs",id:"getchannellistoptions---official-docs",children:[],level:4},{value:"<code>getChannelInfo(channelId, options?)</code> - Official docs",id:"getchannelinfochannelid-options---official-docs",children:[],level:4}],level:3},{value:"Conversasions API",id:"conversasions-api",children:[{value:"<code>getConversationInfo(channelId, options?)</code> - Official docs",id:"getconversationinfochannelid-options---official-docs",children:[],level:4},{value:"<code>getConversationMembers(channelId, options?)</code> - Official docs",id:"getconversationmemberschannelid-options---official-docs",children:[],level:4},{value:"<code>getAllConversationMembers(channelId, options?)</code> - Official docs",id:"getallconversationmemberschannelid-options---official-docs",children:[],level:4},{value:"<code>getConversationList(options?)</code> - Official docs",id:"getconversationlistoptions---official-docs",children:[],level:4},{value:"<code>getAllConversationList(options?)</code> - Official docs",id:"getallconversationlistoptions---official-docs",children:[],level:4}],level:3}],level:2},{value:"Debug Tips",id:"debug-tips",children:[{value:"Log Requests Details",id:"log-requests-details",children:[],level:3}],level:2},{value:"Test",id:"test",children:[{value:"Send Requests to Your Dummy Server",id:"send-requests-to-your-dummy-server",children:[],level:3}],level:2}],c={toc:d};function m(e){var t=e.components,n=(0,l.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#usage"},"Usage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#methods"},"Methods")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#debug-tips"},"Debug Tips")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#test"},"Test"))),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"Get the ",(0,r.kt)("inlineCode",{parentName:"p"},"SlackOAuthClient")," instance using the ",(0,r.kt)("inlineCode",{parentName:"p"},"getClient")," function:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const { getClient } = require('bottender');\n\nconst client = getClient('slack');\n\n// `client` is a `SlackOAuthClient` instance\nconst accountInfo = await context.client.getAccountInfo();\n")),(0,r.kt)("p",null,"Or, get the ",(0,r.kt)("inlineCode",{parentName:"p"},"SlackOAuthClient")," instance from the ",(0,r.kt)("inlineCode",{parentName:"p"},"context"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"async function MyAction(context) {\n  if (context.platform === 'slack') {\n    // `context.client` is a `SlackOAuthClient` instance\n    const accountInfo = await context.client.getAccountInfo();\n  }\n}\n")),(0,r.kt)("h3",{id:"error-handling"},"Error Handling"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"SlackOAuthClient")," uses ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/axios/axios"},"axios")," as HTTP client. We use ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Yoctol/messaging-apis/tree/master/packages/axios-error"},"axios-error")," package to wrap API error instances for better formatting error messages. Calling ",(0,r.kt)("inlineCode",{parentName:"p"},"console.log")," with the error instance returns the formatted message. If you'd like to get the axios ",(0,r.kt)("inlineCode",{parentName:"p"},"request"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"response"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"config"),", you can still get them via those keys on the error instance."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"client.callMethod(method, body).catch((error) => {\n  console.log(error); // the formatted error message\n  console.log(error.stack); // stack trace of the error\n  console.log(error.config); // axios request config\n  console.log(error.request); // axios HTTP request\n  console.log(error.response); // axios HTTP response\n});\n")),(0,r.kt)("br",null),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("p",null,"All methods return a Promise."),(0,r.kt)("br",null),(0,r.kt)("h3",{id:"call-available-methods"},"Call Available Methods"),(0,r.kt)("h4",{id:"callmethodmethod-body---official-docs"},(0,r.kt)("inlineCode",{parentName:"h4"},"callMethod(method, body)")," - ",(0,r.kt)("a",{parentName:"h4",href:"https://api.slack.com/methods"},"Official docs")),(0,r.kt)("p",null,"Call any API methods which follow ",(0,r.kt)("a",{parentName:"p",href:"https://api.slack.com/web#basics"},"slack calling conventions"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"method"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"One of ",(0,r.kt)("a",{parentName:"td",href:"https://api.slack.com/methods"},"API Methods"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"body"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"Body that the method needs.")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"client.callMethod('chat.postMessage', { channel: 'C8763', text: 'Hello!' });\n")),(0,r.kt)("br",null),(0,r.kt)("h3",{id:"chat-api"},"Chat API"),(0,r.kt)("h4",{id:"postmessagechannel-message--options---official-docs"},(0,r.kt)("inlineCode",{parentName:"h4"},"postMessage(channel, message [, options])")," - ",(0,r.kt)("a",{parentName:"h4",href:"https://api.slack.com/methods/chat.postMessage"},"Official docs")),(0,r.kt)("p",null,"Send a message to a channel."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"channel"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"String ","|"," Object")),(0,r.kt)("td",{parentName:"tr",align:null},"The message to be sent, can be text message or attachment message.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"Other optional parameters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.accessToken"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Custom access token of the request.")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"client.postMessage('C8763', { text: 'Hello!' });\nclient.postMessage('C8763', { attachments: [someAttachments] });\nclient.postMessage('C8763', 'Hello!');\nclient.postMessage('C8763', 'Hello!', { asUser: true });\n")),(0,r.kt)("p",null,"If you send message with ",(0,r.kt)("inlineCode",{parentName:"p"},"attachments"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"messaging-api-slack")," will automatically stringify the ",(0,r.kt)("inlineCode",{parentName:"p"},"attachments")," field for you."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"client.postMessage(\n  'C8763',\n  {\n    text: 'Hello!',\n    attachments: [\n      {\n        text: 'Choose a game to play',\n        fallback: 'You are unable to choose a game',\n        callbackId: 'wopr_game',\n        color: '#3AA3E3',\n        attachmentType: 'default',\n        actions: [\n          {\n            name: 'game',\n            text: 'Chess',\n            type: 'button',\n            value: 'chess',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    asUser: true,\n  }\n);\n")),(0,r.kt)("br",null),(0,r.kt)("h4",{id:"postephemeralchannel-user-message--options---official-docs"},(0,r.kt)("inlineCode",{parentName:"h4"},"postEphemeral(channel, user, message [, options])")," - ",(0,r.kt)("a",{parentName:"h4",href:"https://api.slack.com/methods/chat.postEphemeral"},"Official docs")),(0,r.kt)("p",null,"Send an ephemeral message to a user in a channel."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"channel"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"user"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"id")," of the user who will receive the ephemeral message. The user should be in the channel specified by the ",(0,r.kt)("inlineCode",{parentName:"td"},"channel")," argument.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"String ","|"," Object")),(0,r.kt)("td",{parentName:"tr",align:null},"The message to be sent, can be text message or attachment message.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"Other optional parameters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.accessToken"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Custom access token of the request.")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"client.postEphemeral('C8763', 'U56781234', { text: 'Hello!' });\nclient.postEphemeral('C8763', 'U56781234', { attachments: [someAttachments] });\nclient.postEphemeral('C8763', 'U56781234', 'Hello!');\nclient.postEphemeral('C8763', 'U56781234', 'Hello!', { asUser: true });\n")),(0,r.kt)("br",null),(0,r.kt)("h3",{id:"users-api"},"Users API"),(0,r.kt)("h4",{id:"getuserlistoptions---official-docs"},(0,r.kt)("inlineCode",{parentName:"h4"},"getUserList(options?)")," - ",(0,r.kt)("a",{parentName:"h4",href:"https://api.slack.com/methods/users.list"},"Official docs")),(0,r.kt)("p",null,"Lists all users in a Slack team."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"Other optional parameters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.cursor"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Paginate through collections of data by setting the ",(0,r.kt)("inlineCode",{parentName:"td"},"cursor")," parameter to a ",(0,r.kt)("inlineCode",{parentName:"td"},"nextCursor")," attribute returned by a previous request's ",(0,r.kt)("inlineCode",{parentName:"td"},"responseMetadata"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.accessToken"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Custom access token of the request.")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"client.getUserList({ cursor }).then((res) => {\n  console.log(res);\n  // {\n  //   members: [\n  //     { ... },\n  //     { ... },\n  //   ],\n  //   next: 'abcdefg',\n  // }\n});\n")),(0,r.kt)("br",null),(0,r.kt)("h4",{id:"getalluserlistoptions---official-docs"},(0,r.kt)("inlineCode",{parentName:"h4"},"getAllUserList(options?)")," - ",(0,r.kt)("a",{parentName:"h4",href:"https://api.slack.com/methods/users.list"},"Official docs")),(0,r.kt)("p",null,"Recursively lists all users in a Slack team using cursor."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"Other optional parameters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.accessToken"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Custom access token of the request.")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"client.getAllUserList().then((res) => {\n  console.log(res);\n  // [\n  //   { ... },\n  //   { ... },\n  // ]\n});\n")),(0,r.kt)("br",null),(0,r.kt)("h4",{id:"getuserinfouserid-options---official-docs"},(0,r.kt)("inlineCode",{parentName:"h4"},"getUserInfo(userId, options?)")," - ",(0,r.kt)("a",{parentName:"h4",href:"https://api.slack.com/methods/users.info"},"Official docs")),(0,r.kt)("p",null,"Gets information about an user."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"userId"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"User to get info on.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"Other optional parameters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.accessToken"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Custom access token of the request.")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"client.getUserInfo(userId).then((res) => {\n  console.log(res);\n  // {\n  //   id: 'U123456',\n  //   name: 'bobby',\n  //   ...\n  // }\n});\n")),(0,r.kt)("br",null),(0,r.kt)("h3",{id:"channels-api"},"Channels API"),(0,r.kt)("h4",{id:"getchannellistoptions---official-docs"},(0,r.kt)("inlineCode",{parentName:"h4"},"getChannelList(options?)")," - ",(0,r.kt)("a",{parentName:"h4",href:"https://api.slack.com/methods/channels.list"},"Official docs")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"Other optional parameters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.accessToken"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Custom access token of the request.")))),(0,r.kt)("p",null,"Lists all channels in a Slack team."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"client.getChannelList().then((res) => {\n  console.log(res);\n  // [\n  //   { ... },\n  //   { ... },\n  // ]\n});\n")),(0,r.kt)("br",null),(0,r.kt)("h4",{id:"getchannelinfochannelid-options---official-docs"},(0,r.kt)("inlineCode",{parentName:"h4"},"getChannelInfo(channelId, options?)")," - ",(0,r.kt)("a",{parentName:"h4",href:"https://api.slack.com/methods/channels.info"},"Official docs")),(0,r.kt)("p",null,"Gets information about a channel."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"channelId"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Channel to get info on.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"Other optional parameters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.accessToken"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Custom access token of the request.")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"client.getChannelInfo(channelId).then((res) => {\n  console.log(res);\n  // {\n  //   id: 'C8763',\n  //   name: 'fun',\n  //   ...\n  // }\n});\n")),(0,r.kt)("br",null),(0,r.kt)("h3",{id:"conversasions-api"},"Conversasions API"),(0,r.kt)("h4",{id:"getconversationinfochannelid-options---official-docs"},(0,r.kt)("inlineCode",{parentName:"h4"},"getConversationInfo(channelId, options?)")," - ",(0,r.kt)("a",{parentName:"h4",href:"https://api.slack.com/methods/conversations.info"},"Official docs")),(0,r.kt)("p",null,"Retrieve information about a conversation."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"channelId"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Channel to get info on.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"Other optional parameters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.accessToken"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Custom access token of the request.")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"client.getConversationInfo(channelId).then((res) => {\n  console.log(res);\n  // {\n  //   id: 'C8763',\n  //   name: 'fun',\n  //   ...\n  // }\n});\n")),(0,r.kt)("br",null),(0,r.kt)("h4",{id:"getconversationmemberschannelid-options---official-docs"},(0,r.kt)("inlineCode",{parentName:"h4"},"getConversationMembers(channelId, options?)")," - ",(0,r.kt)("a",{parentName:"h4",href:"https://api.slack.com/methods/conversations.members"},"Official docs")),(0,r.kt)("p",null,"Retrieve members of a conversation."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"channelId"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Channel to get info on.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional arguments.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.accessToken"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Custom access token of the request.")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"client.getConversationMembers(channelId, { cursor: 'xxx' });\nclient.getConversationMembers(channelId).then((res) => {\n  console.log(res);\n  // {\n  //   members: ['U061F7AUR', 'U0C0NS9HN'],\n  //   next: 'cursor',\n  // }\n});\n")),(0,r.kt)("br",null),(0,r.kt)("h4",{id:"getallconversationmemberschannelid-options---official-docs"},(0,r.kt)("inlineCode",{parentName:"h4"},"getAllConversationMembers(channelId, options?)")," - ",(0,r.kt)("a",{parentName:"h4",href:"https://api.slack.com/methods/conversations.members"},"Official docs")),(0,r.kt)("p",null,"Recursively retrieve members of a conversation using cursor."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"channelId"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Channel to get info on.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"Other optional parameters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.accessToken"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Custom access token of the request.")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"client.getAllConversationMembers(channelId).then((res) => {\n  console.log(res);\n  // ['U061F7AUR', 'U0C0NS9HN', ...]\n});\n")),(0,r.kt)("br",null),(0,r.kt)("h4",{id:"getconversationlistoptions---official-docs"},(0,r.kt)("inlineCode",{parentName:"h4"},"getConversationList(options?)")," - ",(0,r.kt)("a",{parentName:"h4",href:"https://api.slack.com/methods/conversations.list"},"Official docs")),(0,r.kt)("p",null,"Lists all channels in a Slack team."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional arguments.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.accessToken"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Custom access token of the request.")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"client.getConversationList({ cursor: 'xxx' });\nclient.getConversationList().then((res) => {\n  console.log(res);\n  // {\n  //   channels: [\n  //     {\n  //       id: 'C012AB3CD',\n  //       name: 'general',\n  //       ...\n  //     },\n  //     {\n  //       id: 'C012AB3C5',\n  //       name: 'random',\n  //       ...\n  //     },\n  //   ],\n  //   next: 'cursor',\n  // }\n});\n")),(0,r.kt)("br",null),(0,r.kt)("h4",{id:"getallconversationlistoptions---official-docs"},(0,r.kt)("inlineCode",{parentName:"h4"},"getAllConversationList(options?)")," - ",(0,r.kt)("a",{parentName:"h4",href:"https://api.slack.com/methods/conversations.list"},"Official docs")),(0,r.kt)("p",null,"Recursively lists all channels in a Slack team using cursor."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional arguments.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.accessToken"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Custom access token of the request.")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"client.getAllConversationList().then((res) => {\n  console.log(res);\n  // [\n  //   {\n  //     id: 'C012AB3CD',\n  //     name: 'general',\n  //     ...\n  //   },\n  //   {\n  //     id: 'C012AB3C5',\n  //     name: 'random',\n  //     ...\n  //   },\n  // ],\n});\n")),(0,r.kt)("br",null),(0,r.kt)("h2",{id:"debug-tips"},"Debug Tips"),(0,r.kt)("h3",{id:"log-requests-details"},"Log Requests Details"),(0,r.kt)("p",null,"To enable default request debugger, use following ",(0,r.kt)("inlineCode",{parentName:"p"},"DEBUG")," env variable:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"DEBUG=messaging-api-slack\n")),(0,r.kt)("h2",{id:"test"},"Test"),(0,r.kt)("h3",{id:"send-requests-to-your-dummy-server"},"Send Requests to Your Dummy Server"),(0,r.kt)("p",null,"To avoid sending requests to the real Slack server, provide the ",(0,r.kt)("inlineCode",{parentName:"p"},"origin")," option in your ",(0,r.kt)("inlineCode",{parentName:"p"},"bottender.js.config")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"module.exports = {\n  channels: {\n    viber: {\n      enabled: true,\n      path: '/webhooks/slack',\n      accessToken: process.env.SLACK_ACCESS_TOKEN,\n      signingSecret: process.env.SLACK_SIGNING_SECRET,\n      origin:\n        process.env.NODE_ENV === 'test'\n          ? 'https://mydummytestserver.com'\n          : undefined,\n    },\n  },\n};\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Warning:")," Don't do this on the production server.")))}m.isMDXComponent=!0}}]);