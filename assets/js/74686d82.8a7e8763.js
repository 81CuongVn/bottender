"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[71497],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(r),d=o,v=m["".concat(l,".").concat(d)]||m[d]||u[d]||a;return r?n.createElement(v,s(s({ref:t},c),{},{components:r})):n.createElement(v,s({ref:t},c))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},46192:(e,t,r)=>{r.r(t),r.d(t,{frontMatter:()=>i,contentTitle:()=>l,metadata:()=>p,toc:()=>c,default:()=>m});var n=r(87462),o=r(63366),a=(r(67294),r(3905)),s=["components"],i={id:"server",title:"HTTP Server",original_id:"server"},l=void 0,p={unversionedId:"server",id:"version-0.15.17/server",isDocsHomePage:!1,title:"HTTP Server",description:"Bottender supports the following HTTP servers. You can choose one of them to develop your own bots.",source:"@site/versioned_docs/version-0.15.17/Guides-Server.md",sourceDirName:".",slug:"/server",permalink:"/docs/0.15.17/server",editUrl:"https://github.com/Yoctol/bottender/edit/master/docs/versioned_docs/version-0.15.17/Guides-Server.md",tags:[],version:"0.15.17",lastUpdatedBy:"\u5433\u6771\u66c4 Wu, Dung-Ie",lastUpdatedAt:1636542901,formattedLastUpdatedAt:"11/10/2021",frontMatter:{id:"server",title:"HTTP Server",original_id:"server"},sidebar:"version-0.15.17/docs",previous:{title:"Middleware",permalink:"/docs/0.15.17/middleware"},next:{title:"Conversation Session",permalink:"/docs/0.15.17/session"}},c=[{value:"Parameters",id:"parameters",children:[{value:"Bot Instance",id:"bot-instance",children:[],level:3},{value:"Options",id:"options",children:[],level:3}],level:2},{value:"Servers",id:"servers",children:[{value:"Express",id:"express",children:[],level:3},{value:"Koa",id:"koa",children:[],level:3},{value:"Micro",id:"micro",children:[],level:3},{value:"Restify",id:"restify",children:[],level:3}],level:2}],u={toc:c};function m(e){var t=e.components,r=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Bottender supports the following HTTP servers. You can choose one of them to develop your own bots."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#express"},"Express")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#koa"},"Koa")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#micro"},"Micro")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#restify"},"Restify"))),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"createServer")," function accepts two parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#bot-instance"},"Bot Instance")," (required)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#options"},"Options"))),(0,a.kt)("h3",{id:"bot-instance"},"Bot Instance"),(0,a.kt)("p",null,"All you need to do is to use the right ",(0,a.kt)("inlineCode",{parentName:"p"},"createServer")," function according to the platform and pass the bot instance to get the server."),(0,a.kt)("p",null,"For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { createServer } = require('bottender/express');\n\nconst bot = require('./bot'); // implement your bot logic\n\nconst server = createServer(bot);\n\nserver.listen(5000, () => {\n  console.log('server is running on 5000 port...');\n});\n")),(0,a.kt)("h3",{id:"options"},"Options"),(0,a.kt)("p",null,"If you are developing a Messenger bot and you want to use your own verify token, you can pass options object with ",(0,a.kt)("inlineCode",{parentName:"p"},"verifyToken")," key."),(0,a.kt)("p",null,"For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { createServer } = require('bottender/express');\n\nconst bot = require('./bot'); // implement your Messenger bot logic\n\nconst server = createServer(bot, {\n  verifyToken: '__FILL_YOUR_VERIFY_TOKEN_HERE__',\n});\n\nserver.listen(5000, () => {\n  console.log('server is running on 5000 port...');\n});\n")),(0,a.kt)("h2",{id:"servers"},"Servers"),(0,a.kt)("h3",{id:"express"},"Express"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Fast, unopinionated, minimalist web framework for Node.js.",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/expressjs/express"},"https://github.com/expressjs/express"))),(0,a.kt)("p",null,"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { createServer } = require('bottender/express');\n\nconst bot = require('./bot'); // implement your bot logic\n\nconst server = createServer(bot);\n\nserver.listen(5000, () => {\n  console.log('server is running on 5000 port...');\n});\n")),(0,a.kt)("p",null,"The full ",(0,a.kt)("inlineCode",{parentName:"p"},"Express")," server example is ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Yoctol/bottender/tree/v0.15.x/examples/server-express"},"here"),"."),(0,a.kt)("h3",{id:"koa"},"Koa"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Koa is a new web framework designed by the team behind Express, which aims to be a smaller, more expressive, and more robust foundation for web applications and APIs.",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/koajs/koa"},"https://github.com/koajs/koa"))),(0,a.kt)("p",null,"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { createServer } = require('bottender/koa');\n\nconst bot = require('./bot'); // implement your bot logic\n\nconst server = createServer(bot);\n\nserver.listen(5000, () => {\n  console.log('server is running on 5000 port...');\n});\n")),(0,a.kt)("p",null,"The full ",(0,a.kt)("inlineCode",{parentName:"p"},"Koa")," server example is ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Yoctol/bottender/tree/v0.15.x/examples/server-koa"},"here"),"."),(0,a.kt)("h3",{id:"micro"},"Micro"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Asynchronous HTTP microservices",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/zeit/micro"},"https://github.com/zeit/micro"))),(0,a.kt)("p",null,"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { createRequestHandler } = require('bottender/micro');\n\nconst bot = require('./bot'); // implement your bot logic\n\nmodule.exports = createRequestHandler(bot);\n")),(0,a.kt)("p",null,"The full ",(0,a.kt)("inlineCode",{parentName:"p"},"Micro")," server example is ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Yoctol/bottender/tree/v0.15.x/examples/server-micro"},"here"),"."),(0,a.kt)("h3",{id:"restify"},"Restify"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"A Node.js web service framework optimized for building semantically correct RESTful web services ready for production use at scale. restify optimizes for introspection and performance, and is used in some of the largest Node.js deployments on Earth.",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/restify/node-restify"},"https://github.com/restify/node-restify"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { createServer } = require('bottender/restify');\n\nconst bot = require('./bot'); // implement your bot logic\n\nconst server = createServer(bot);\n\nserver.listen(5000, () => {\n  console.log('server is running on 5000 port...');\n});\n")),(0,a.kt)("p",null,"The full ",(0,a.kt)("inlineCode",{parentName:"p"},"Restify")," server example is ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Yoctol/bottender/tree/v0.15.x/examples/server-restify"},"here"),"."))}m.isMDXComponent=!0}}]);