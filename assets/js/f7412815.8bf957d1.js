"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9953],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,v=u["".concat(s,".").concat(m)]||u[m]||c[m]||a;return n?r.createElement(v,l(l({ref:t},d),{},{components:n})):r.createElement(v,l({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},60822:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>i,contentTitle:()=>s,metadata:()=>p,toc:()=>d,default:()=>u});var r=n(87462),o=n(63366),a=(n(67294),n(3905)),l=["components"],i={id:"deployment",title:"Deployment",original_id:"deployment"},s=void 0,p={unversionedId:"deployment",id:"version-0.15.17/deployment",isDocsHomePage:!1,title:"Deployment",description:"Deploying a Bottender server is as easy as deploying a regular Node server.",source:"@site/versioned_docs/version-0.15.17/Guides-Deployment.md",sourceDirName:".",slug:"/deployment",permalink:"/docs/0.15.17/deployment",editUrl:"https://github.com/Yoctol/bottender/edit/master/docs/versioned_docs/version-0.15.17/Guides-Deployment.md",tags:[],version:"0.15.17",lastUpdatedBy:"\u5433\u6771\u66c4 Wu, Dung-Ie",lastUpdatedAt:1636542901,formattedLastUpdatedAt:"11/10/2021",frontMatter:{id:"deployment",title:"Deployment",original_id:"deployment"},sidebar:"version-0.15.17/docs",previous:{title:"Commands",permalink:"/docs/0.15.17/commands"},next:{title:"Error Handling",permalink:"/docs/0.15.17/error-handling"}},d=[{value:"Now",id:"now",children:[{value:"Secrets",id:"secrets",children:[],level:3},{value:"Environment Variables",id:"environment-variables",children:[],level:3},{value:"Deploy",id:"deploy",children:[],level:3},{value:"List Project",id:"list-project",children:[],level:3},{value:"Alias",id:"alias",children:[],level:3}],level:2},{value:"Heroku",id:"heroku",children:[{value:"Creating a New Git Repository",id:"creating-a-new-git-repository",children:[],level:3},{value:"Setting Server Port",id:"setting-server-port",children:[],level:3},{value:"Setting Node Version",id:"setting-node-version",children:[],level:3},{value:"Deploy",id:"deploy-1",children:[],level:3}],level:2}],c={toc:d};function u(e){var t=e.components,n=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Deploying a Bottender server is as easy as deploying a regular Node server."),(0,a.kt)("p",null,"In this section, following fast and simple ways of deployment are introduced:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://zeit.co/now"},"Now")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.heroku.com/home"},"Heroku"))),(0,a.kt)("p",null,"Note that these services have limited free dynos. If your bots need to be up 24/7, you should consider paid plans or other services."),(0,a.kt)("h2",{id:"now"},"Now"),(0,a.kt)("p",null,"You can set vars in ",(0,a.kt)("inlineCode",{parentName:"p"},"bottender.config.js")," as environment vars and secrets."),(0,a.kt)("h3",{id:"secrets"},"Secrets"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"$ now secret add my_verify_token 1qaz2wsx\n")),(0,a.kt)("p",null,"You can list, rename and remove your secrets by the following commands:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"$ now secret ls\n$ now secret rename my_verify_token verify_token\n$ now secret rm my_verify_token\n")),(0,a.kt)("h3",{id:"environment-variables"},"Environment Variables"),(0,a.kt)("p",null,"Use ",(0,a.kt)("inlineCode",{parentName:"p"},"@var")," to set the environment variable with your now secrets."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"$ now -e VERIFY_TOKEN=1qaz2wsx\n$ now -e VERIFY_TOKEN=@verify_token\n")),(0,a.kt)("h3",{id:"deploy"},"Deploy"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"$ now\n")),(0,a.kt)("h3",{id:"list-project"},"List Project"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"$ now ls\n")),(0,a.kt)("h3",{id:"alias"},"Alias"),(0,a.kt)("p",null,"Make alias to set your customized domain."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"$ now alias zeit-suslhdzwiy.now.sh workshop // workshop.now.sh\n$ now alias zeit-suslhdzwiy.now.sh bottender.com // upgrade plan\n")),(0,a.kt)("h2",{id:"heroku"},"Heroku"),(0,a.kt)("p",null,"You can deploy your bot on Heroku simply using Heroku CLI after creating a new app."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"$ heroku login\n")),(0,a.kt)("h3",{id:"creating-a-new-git-repository"},"Creating a New Git Repository"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"$ cd my-project/\n$ git init\n$ heroku git:remote -a your-app-name // for existing repositories, simply add heroku remote\n")),(0,a.kt)("h3",{id:"setting-server-port"},"Setting Server Port"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://devcenter.heroku.com/articles/runtime-principles#web-servers"},"Heroku")," use ",(0,a.kt)("inlineCode",{parentName:"p"},"$PORT")," environment variable to tell apps which port should their server listen. You should make sure your bot server is listening on ",(0,a.kt)("inlineCode",{parentName:"p"},"process.env.PORT")," instead of any other hard-coded ports."),(0,a.kt)("p",null,"For example,"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const port = process.env.PORT || 5000;\nserver.listen(port, () => {\n  console.log(`server is running on ${port} port...`);\n});\n")),(0,a.kt)("h3",{id:"setting-node-version"},"Setting Node Version"),(0,a.kt)("p",null,"Make sure your Node version on Heroku is higher than 7.6.0. These lines can be added to ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," to specify the Node version."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'"engines": {\n  "node": ">= 7.6.0"\n}\n')),(0,a.kt)("h3",{id:"deploy-1"},"Deploy"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'$ git add .\n$ git commit -am "make it better"\n$ git push heroku master\n')))}u.isMDXComponent=!0}}]);